rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection rules
    match /users/{userId} {
      // A user can read and update their own profile
      allow create: if isAuthenticated();
      allow read, update: if isAuthenticated() && request.auth.uid == userId;
      // Admins can read all user profiles
      allow read: if isAdmin();
    }
    
    // Parts collection rules
    match /parts/{partId} {
      // Any user can read parts
      allow read: if true;
      // Only admins can create, update or delete parts
      allow create, update, delete: if isAdmin();
    }
    
    // Orders collection rules - to be expanded later
    match /orders/{orderId} {
      // Users can read their own orders
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Users can create orders
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Admins can read all orders
      allow read, update: if isAdmin();
    }
    
    // Deny access to everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}